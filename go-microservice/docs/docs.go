// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Seu Nome",
            "url": "http://www.seu-site.com",
            "email": "seu-email@dominio.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/generate-commit": {
            "post": {
                "description": "Gera uma mensagem de commit personalizada usando IA",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Commit"
                ],
                "summary": "Gera uma mensagem de commit",
                "parameters": [
                    {
                        "description": "Dados para gerar o commit",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CommitRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CommitResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Retorna o status de sa√∫de do servidor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Health"
                ],
                "summary": "Verifica o status do servidor",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.CommitRequest": {
            "type": "object",
            "required": [
                "commit_length",
                "commit_style",
                "model",
                "repo_path"
            ],
            "properties": {
                "commit_lang": {
                    "type": "string"
                },
                "commit_length": {
                    "type": "string",
                    "enum": [
                        "short",
                        "long"
                    ]
                },
                "commit_style": {
                    "type": "string",
                    "enum": [
                        "conventional",
                        "plain-text",
                        "emoji-style"
                    ]
                },
                "model": {
                    "type": "string"
                },
                "openai_key": {
                    "type": "string"
                },
                "repo_path": {
                    "type": "string"
                }
            }
        },
        "models.CommitResponse": {
            "type": "object",
            "properties": {
                "commit_message": {
                    "type": "string"
                },
                "original_message": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{"http"},
	Title:            "Go Backend API",
	Description:      "API para gerar mensagens de commit personalizadas usando IA.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
